context featureSetsRelevance = DocumentNLPBoolean(initScript="/relevance/featureSets/Unigram.ctx", initOnce="true", initOverrideByName="true");
context trainDevTestDataRelevance = DocumentNLPBoolean(initScript="/relevance/data/LoadTrainDevTest.ctx", initOnce="true", initOverrideByName="true");

data_features trainMatrix = DataFeatureMatrix(data=${trainDevTestDataRelevance.trainData}, features=${featureSetsRelevance.fs});
	
model m=StanfordLinear(defaultLabel="true") {
	array validLabels=("true", "false");
};

evaluation modelF2=F(filterLabel="true", Beta="2");
classify_method modelMethod = SupervisedModel(model=${m}, data=${trainMatrix}, trainEvaluation=${modelF2});

search trr=Grid() {
	dimension classificationThreshold=Enumerated(values=(".1", ".2", ".3", ".4", ".5", ".6", ".7", ".8", ".9", ".95", ".975", ".99", ".995"), stageIndex="1");
};

classify_eval devEval = F(task=${trainDevTestDataRelevance.devTask}, method=${modelMethod}, Beta="2", filterLabel="true");
classify_method methodFinal= RunClassifyMethodSearch(fn=${devEval}, search=${trr});
